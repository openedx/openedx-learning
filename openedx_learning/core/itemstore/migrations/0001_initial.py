# Generated by Django 3.2.10 on 2022-08-07 17:00

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('publishing', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Content',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hash_digest', models.CharField(editable=False, max_length=40)),
                ('type', models.CharField(max_length=127)),
                ('sub_type', models.CharField(max_length=127)),
                ('size', models.PositiveBigIntegerField(validators=[django.core.validators.MaxValueValidator(10000000)])),
                ('created', models.DateTimeField()),
                ('data', models.BinaryField(max_length=10000000)),
                ('learning_context', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='publishing.learningcontext')),
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('namespace', models.CharField(max_length=100)),
                ('identifier', models.CharField(max_length=255)),
                ('created', models.DateTimeField()),
                ('modified', models.DateTimeField()),
                ('learning_context', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='publishing.learningcontext')),
            ],
        ),
        migrations.CreateModel(
            name='ItemVersion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('title', models.CharField(blank=True, max_length=1000, null=True)),
                ('created', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='LearningContextVersionItemVersion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='itemstore.item')),
                ('item_version', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='itemstore.itemversion')),
                ('learning_context_version', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='publishing.learningcontextversion')),
            ],
        ),
        migrations.CreateModel(
            name='ItemVersionContent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', models.CharField(max_length=255)),
                ('content', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='itemstore.content')),
                ('item_version', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='itemstore.itemversion')),
            ],
        ),
        migrations.AddField(
            model_name='itemversion',
            name='contents',
            field=models.ManyToManyField(related_name='item_versions', through='itemstore.ItemVersionContent', to='itemstore.Content'),
        ),
        migrations.AddField(
            model_name='itemversion',
            name='item',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='itemstore.item'),
        ),
        migrations.AddField(
            model_name='itemversion',
            name='learning_context_versions',
            field=models.ManyToManyField(related_name='item_versions', through='itemstore.LearningContextVersionItemVersion', to='publishing.LearningContextVersion'),
        ),
        migrations.AddConstraint(
            model_name='learningcontextversionitemversion',
            constraint=models.UniqueConstraint(fields=('learning_context_version_id', 'item_version_id'), name='lcviv_uniq_lcv_iv'),
        ),
        migrations.AddConstraint(
            model_name='learningcontextversionitemversion',
            constraint=models.UniqueConstraint(fields=('learning_context_version', 'item'), name='lcviv_uniq_lcv_item'),
        ),
        migrations.AddIndex(
            model_name='itemversioncontent',
            index=models.Index(fields=['content', 'item_version'], name='itemversioncontent_c_iv'),
        ),
        migrations.AddIndex(
            model_name='itemversioncontent',
            index=models.Index(fields=['item_version', 'content'], name='itemversioncontent_iv_d'),
        ),
        migrations.AddConstraint(
            model_name='itemversioncontent',
            constraint=models.UniqueConstraint(fields=('item_version', 'identifier'), name='itemversioncontent_uniq_iv_id'),
        ),
        migrations.AddConstraint(
            model_name='item',
            constraint=models.UniqueConstraint(fields=('learning_context', 'namespace', 'identifier'), name='item_uniq_lc_ns_identifier'),
        ),
        migrations.AddConstraint(
            model_name='content',
            constraint=models.UniqueConstraint(fields=('learning_context', 'type', 'sub_type', 'hash_digest'), name='content_uniq_lc_hd'),
        ),
    ]
